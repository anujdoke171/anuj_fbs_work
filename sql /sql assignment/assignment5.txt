1.List all the books that are written by Author Loni and has price

less then 600.

select author,cost from books where author='Loni' and cost<=600;
+--------+------+
| author | cost |
+--------+------+
| Loni   |  550 |
| Loni   |  250 |
+--------+------+

2.List the Issue details for the books that are not returned yet.

select * from issue where Return_Date is null;


+--------------+---------+-----------+------------+-------------+
| Lib_Issue_Id | Book_No | Member_Id | Issue_Date | Return_Date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-10 | NULL        |
|         7002 |     102 |         2 | 2006-12-25 | NULL        |
|         7003 |     104 |         1 | 2006-01-15 | NULL        |
|         7004 |     101 |         1 | 2006-07-04 | NULL        |
|         7005 |     104 |         2 | 2006-11-15 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+


3.Update all the blank return_date with 31-Dec-06 excluding 7005

and 7006.

 update issue set Return_Date ='2006-12-06' where Lib_Issue_Id not in (7005,7006);
 select * from issue;
+--------------+---------+-----------+------------+-------------+
| Lib_Issue_Id | Book_No | Member_Id | Issue_Date | Return_Date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-10 | 2006-12-06  |
|         7002 |     102 |         2 | 2006-12-25 | 2006-12-06  |
|         7003 |     104 |         1 | 2006-01-15 | 2006-12-06  |
|         7004 |     101 |         1 | 2006-07-04 | 2006-12-06  |
|         7005 |     104 |         2 | 2006-11-15 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+

4.List all the Issue details that have books issued for more then 30

days.

select * from issue where datediff(Return_Date,Issue_Date)>30;
+--------------+---------+-----------+------------+-------------+
| Lib_Issue_Id | Book_No | Member_Id | Issue_Date | Return_Date |
+--------------+---------+-----------+------------+-------------+
|         7003 |     104 |         1 | 2006-01-15 | 2006-12-06  |
|         7004 |     101 |         1 | 2006-07-04 | 2006-12-06  |
+--------------+---------+-----------+------------+-------------+

5.List all the books that have price in range of 500 to 750 and has

category as Database.

 select cost,category from books where cost between 500 and 750 and category='database';
+------+----------+
| cost | category |
+------+----------+
|  550 | database |
|  750 | database |
+------+----------+

6.List all the books that belong to any one of the following
categories Science, Database, Fiction, Management.

select book_name from books where category in('database','science','fiction','management');
+---------------------+
| book_name           |
+---------------------+
| Oracle-Complete Ref |
| Mastering SQL       |
| PL SQL-Ref          |
+---------------------+

7.List all the members in the descending order of Penalty due on

them.
     select member_id,member_name,penalty_amount from member101 order by penalty_amount desc;
+-----------+-----------------+----------------+
| member_id | member_name     | penalty_amount |
+-----------+-----------------+----------------+
|         4 | ab devilliers   |         210.00 |
|         6 | rohit sharma    |         100.00 |
|         1 | richa sharma    |          50.00 |
|         3 | virat kohli     |          40.00 |
|         5 | jasprit bumrah  |          10.00 |
|         2 | garima sen      |           NULL |
|         7 | ravindra jadeja |           NULL |
+-----------+-----------------+----------------+


8.Modify the price of book with id 103 to Rs 300 and category to

RDBMS.

update books set cost=300,category='RDBMS' where Book_No = 103;

select * from books;
+---------+---------------------+----------------+------+----------+
| book_no | book_name           | author         | cost | category |
+---------+---------------------+----------------+------+----------+
|     101 | let us C            | Dennis Ritchie |  450 | system   |
|     102 | Oracle-Complete Ref | Loni           |  550 | database |
|     103 | Mastering SQL       | Loni           |  300 | RDBMS    |
|     104 | PL SQL-Ref          | Scott Urman    |  750 | database |
+---------+---------------------+----------------+------+----------+

9.List all the books in ascending order of category and descending

order of price.

 select * from books order by category asc,cost desc;
+---------+---------------------+----------------+------+----------+
| book_no | book_name           | author         | cost | category |
+---------+---------------------+----------------+------+----------+
|     104 | PL SQL-Ref          | Scott Urman    |  750 | database |
|     102 | Oracle-Complete Ref | Loni           |  550 | database |
|     103 | Mastering SQL       | Loni           |  300 | RDBMS    |
|     101 | let us C            | Dennis Ritchie |  450 | system   |
+---------+---------------------+----------------+------+----------+



10.List all the books that contain word SQL in the name of the book.

 select * from books where book_name like '%sql%';
+---------+---------------+-------------+------+----------+
| book_no | book_name     | author      | cost | category |
+---------+---------------+-------------+------+----------+
|     103 | Mastering SQL | Loni        |  300 | RDBMS    |
|     104 | PL SQL-Ref    | Scott Urman |  750 | database |
+---------+---------------+-------------+------+----------+

Display the count of total no of books issued to Member 101.

select Book_No,count(*) from issue where Book_No=101;
+---------+----------+
| Book_No | count(*) |
+---------+----------+
|     101 |        3 |
+---------+----------+

Display the total penalty due for all the members.

 select sum(penalty_amount) from member101;
+---------------------+
| sum(penalty_amount) |
+---------------------+
|              410.00 |
+---------------------+

Display the total no of members

select sum(member_id) from member101;
+----------------+
| sum(member_id) |
+----------------+
|             28 |
+----------------+

Display the total no of books issued

 SELECT COUNT(*) AS Total_Books_Issued
    -> FROM issue;
+--------------------+
| Total_Books_Issued |
+--------------------+
|                  6 |
+--------------------+


Display the average membership fees paid by all the members

select avg(fees_paid) from member101;
+----------------+
| avg(fees_paid) |
+----------------+
|      5000.0000 |
+----------------+

List the various categories and count of books in each category.

 select  category,count(*) from books group by category;
+----------+----------+
| category | count(*) |
+----------+----------+
| system   |        1 |
| database |        2 |
| RDBMS    |        1 |
+----------+----------+

List the book_No and the number of times the book is issued in the
descending order of count.

select book_no,Issue_Date from issue order by  issue_date desc;
+---------+------------+
| book_no | Issue_Date |
+---------+------------+
|     102 | 2006-12-25 |
|     101 | 2006-12-10 |
|     104 | 2006-11-15 |
|     101 | 2006-07-04 |
|     101 | 2006-02-18 |
|     104 | 2006-01-15 |
+---------+------------+

Find the maximum, minimum, total and average penalty amount in
the member table.

select max(penalty_amount),min(penalty_amount),sum(penalty_amount),avg(penalty_amount) from member101;
+---------------------+---------------------+---------------------+---------------------+
| max(penalty_amount) | min(penalty_amount) | sum(penalty_amount) | avg(penalty_amount) |
+---------------------+---------------------+---------------------+---------------------+
|              210.00 |               10.00 |              410.00 |           82.000000 |
+---------------------+---------------------+---------------------+---------------------+

Display the member id and the no of books for each member that
has issued more then 2 books.


select Member_Id,count(Book_No) from issue group by Member_Id having count(Book_No) > 2 ;
+-----------+----------------+
| Member_Id | count(Book_No) |
+-----------+----------------+
|         1 |              3 |
+-----------+----------------+

Display the member id, book no and no of times the same book is
issued by the member in the descending order of count.

SELECT Book_No, COUNT(Book_No) AS Issue_Count
     FROM issue
     GROUP BY Book_No
     ORDER BY Issue_Count DESC, Book_No;
+---------+-------------+
| Book_No | Issue_Count |
+---------+-------------+
|     101 |           3 |
|     104 |           2 |
|     102 |           1 |
+---------+-------------+

Display the month and no of books issued each month in the
descending order of count.

 SELECT
    ->     MONTHNAME(Issue_Date) AS Issue_Month,
    ->     COUNT(*) AS Books_Issued
    -> FROM
    ->     issue
    -> GROUP BY
    ->     MONTH(Issue_Date), MONTHNAME(Issue_Date)
    -> ORDER BY
    ->     Books_Issued DESC;
+-------------+--------------+
| Issue_Month | Books_Issued |
+-------------+--------------+
| December    |            2 |
| January     |            1 |
| July        |            1 |
| November    |            1 |
| February    |            1 |
+-------------+--------------+

List the book_no of all the books that are not issued to any

member so far.

     select Book_No from issue where Book_No not in (Book_No);
                Empty set

List all the member id that exist in member table and has also at
least one book issued by them.

select distinct Member_Id from issue;
+-----------+
| Member_Id |
+-----------+
|         1 |
|         2 |
|         3 |
+-----------+

List the member ID with highest and lowest no of books issued.

 select Member_Id,count(*) from issue group by Member_Id;
+-----------+----------+
| Member_Id | count(*) |
+-----------+----------+
|         1 |        3 |
|         2 |        2 |
|         3 |        1 |
+-----------+----------+


List all the Issue_details for books issued in December and July
without using any arithmetic, Logical or comparison operator.


select * from issue where monthname(Issue_Date) in ('December','July');
+--------------+---------+-----------+------------+-------------+
| Lib_Issue_Id | Book_No | Member_Id | Issue_Date | Return_Date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-10 | 2006-12-06  |
|         7002 |     102 |         2 | 2006-12-25 | 2006-12-06  |
|         7004 |     101 |         1 | 2006-07-04 | 2006-12-06  |
+--------------+---------+-----------+------------+-------------+

List the Member Id, Member Name and max books allowed in the
descending order of the max books allowed.

select member_id,member_name,max_books_allowed from member101 order by max_books_allowed desc;
+-----------+-----------------+-------------------+
| member_id | member_name     | max_books_allowed |
+-----------+-----------------+-------------------+
|         3 | virat kohli     |                 8 |
|         7 | ravindra jadeja |                 6 |
|         1 | richa sharma    |                 5 |
|         6 | rohit sharma    |                 5 |
|         2 | garima sen      |                 3 |
|         5 | jasprit bumrah  |                 3 |
|         4 | ab devilliers   |                 2 |
+-----------+-----------------+-------------------+

List all the books that have highest price in their own category.

select category,max(cost) from books group by category;
+----------+-----------+
| category | max(cost) |
+----------+-----------+
| system   |       450 |
| database |       750 |
| RDBMS    |       300 |
+----------+-----------+

List all the authors and book_name that has more then 1 book
written by them.

 select author,count(*) from books group by author having count(*) > 1;
+--------+----------+
| author | count(*) |
+--------+----------+
| Loni   |        2 |
+--------+----------+

List the Member ID, Member Name of the people that have issued
the highest and the lowest no of books.

select Member_Id,count(*) as totalissue from issue group by Member_Id;
+-----------+------------+
| Member_Id | totalissue |
+-----------+------------+
|         1 |          3 |
|         2 |          2 |
|         3 |          1 |
+-----------+------------+

List the details of highest 3 priced books.

select * from books order by cost desc limit 3;
+---------+---------------------+----------------+------+----------+
| book_no | book_name           | author         | cost | category |
+---------+---------------------+----------------+------+----------+
|     104 | PL SQL-Ref          | Scott Urman    |  750 | database |
|     102 | Oracle-Complete Ref | Loni           |  550 | database |
|     101 | let us C            | Dennis Ritchie |  450 | system   |
+---------+---------------------+----------------+------+----------+

List the details of the book that has been issued maximum no of
times.

select Book_No,count(*) from issue group by Book_No;
+---------+----------+
| Book_No | count(*) |
+---------+----------+
|     101 |        3 |
|     102 |        1 |
|     104 |        2 |
+---------+----------+

List all member types and how many members are there in each
type.

select membership_type,count(*) from member101 group by membership_type;
+-----------------+----------+
| membership_type | count(*) |
+-----------------+----------+
| lifetime        |        2 |
| annual          |        3 |
| half year       |        1 |
| quarterly       |        1 |
+-----------------+----------+

List first 5 members who had joined library.

select member_id,member_name,acc_open_date from member101 order by acc_open_date limit 5;
+-----------+-----------------+---------------+
| member_id | member_name     | acc_open_date |
+-----------+-----------------+---------------+
|         1 | richa sharma    | 2010-12-05    |
|         7 | ravindra jadeja | 2012-08-25    |
|         4 | ab devilliers   | 2012-12-04    |
|         3 | virat kohli     | 2012-12-12    |
|         6 | rohit sharma    | 2022-02-22    |
+-----------+-----------------+---------------+



Modify the Penalty_Amount for Garima Sen to Rs 100.

  select * from member101;
+-----------+-----------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name     | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+-----------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         1 | richa sharma    | pune           | 2010-12-05    | lifetime        |     25000 |                 5 |          50.00 |
|         2 | garima sen      | pune           | 2025-08-23    | annual          |      1000 |                 3 |         100.00 |
|         3 | virat kohli     | eklahare       | 2012-12-12    | half year       |      2400 |                 8 |          40.00 |
|         4 | ab devilliers   | south africa   | 2012-12-04    | quarterly       |       400 |                 2 |         210.00 |
|         5 | jasprit bumrah  | kalamb         | 2022-12-04    | annual          |      1400 |                 3 |          10.00 |
|         6 | rohit sharma    | manchar        | 2022-02-22    | lifetime        |      4400 |                 5 |         100.00 |
|         7 | ravindra jadeja | karvenager     | 2012-08-25    | annual          |       400 |                 6 |           NULL |
+-----------+-----------------+----------------+---------------+-----------------+-----------+-------------------+----------------+


find out bno,iss-data, ret-date of the books issued by garima sen.

 select Book_No as bno,Issue_Date as idate,Return_Date as retdate from issue as iss inner join member101 mem on iss.member_id = mem.member_id where member_name="garima sen";
+------+------------+------------+
| bno  | idate      | retdate    |
+------+------------+------------+
|  102 | 2006-12-25 | 2006-12-06 |
|  104 | 2006-11-15 | 2006-12-06 |
+------+------------+------------+







